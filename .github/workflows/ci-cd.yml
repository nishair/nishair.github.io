name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  # Continuous Integration Job
  ci:
    name: Continuous Integration
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install Dependencies
      run: npm ci

    - name: Run Linting
      run: npm run lint

    - name: Run Tests
      run: npm run test:coverage

    - name: Upload Coverage Reports
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage/lcov.info
        flags: unittests
        name: codecov-portfolio

    - name: Run Build Check
      run: npm run build

    # Archive test results
    - name: Upload Test Results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results
        path: |
          coverage/
          test-results.xml

  # Security Scanning Job
  security:
    name: Security Scan
    runs-on: ubuntu-latest
    needs: ci

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Run CodeQL Analysis
      uses: github/codeql-action/init@v2
      with:
        languages: javascript

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v2

  # Accessibility Testing Job
  accessibility:
    name: Accessibility Testing
    runs-on: ubuntu-latest
    needs: ci

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Install Dependencies
      run: npm ci

    - name: Start Local Server
      run: |
        npm run serve &
        sleep 5

    - name: Run Lighthouse CI
      run: |
        npm install -g @lhci/cli
        lhci autorun --upload.target=temporary-public-storage

  # Continuous Deployment Job
  deploy:
    name: Deploy to GitHub Pages
    runs-on: ubuntu-latest
    needs: [ci, security]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    permissions:
      contents: read
      pages: write
      id-token: write

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install Dependencies
      run: npm ci

    - name: Run Tests
      run: npm test

    - name: Run Build
      run: npm run build

    - name: Setup Pages
      uses: actions/configure-pages@v4

    - name: Upload Pages Artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: '.'

    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4

  # Notification Job
  notify:
    name: Send Notifications
    runs-on: ubuntu-latest
    needs: [deploy]
    if: always()

    steps:
    - name: Notify Success
      if: needs.deploy.result == 'success'
      run: |
        echo "‚úÖ Portfolio deployed successfully!"
        echo "üöÄ Site is live at: https://anishnair.github.io"

    - name: Notify Failure
      if: needs.deploy.result == 'failure'
      run: |
        echo "‚ùå Deployment failed!"
        echo "Check the logs for more details."